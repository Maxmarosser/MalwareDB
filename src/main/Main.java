package main;

import static java.nio.file.StandardCopyOption.*;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class Main {

	public static void main(String[] args) {
		// moveFile();
		String md5hash = md5Convertion();
		String sha1hash = sha1Convertion();
		System.out.println("MD5 hascode: " + md5hash);
		System.out.println("SHA1 hascode: " + sha1hash);

	}

	private static void moveFile() {
		Path source = FileSystems.getDefault().getPath(
				"/home/wojtyla/workspaceEclipse/MalwareDB/from", "aaa");
		Path target = FileSystems.getDefault().getPath(
				"/home/wojtyla/workspaceEclipse/MalwareDB/to", "bbb");
		try {
			Files.move(source, target, REPLACE_EXISTING);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static String md5Convertion() {
		try {
			MessageDigest md = MessageDigest.getInstance("MD5");

			FileInputStream fis = new FileInputStream(
					"/home/wojtyla/workspaceEclipse/MalwareDB/from/README.md");

			byte[] dataBytes = new byte[9999];

			int read = 0;

			while ((read = fis.read(dataBytes)) != -1) {
				md.update(dataBytes, 0, read);
			}
			;

			byte[] mdbytes = md.digest();

			StringBuffer hexString = new StringBuffer();
			for (int i = 0; i < mdbytes.length; i++) {
				String hex = Integer.toHexString(0xff & mdbytes[i]);
				if (hex.length() == 1)
					hexString.append('0');
				hexString.append(hex);
			}

			fis.close();
			return hexString.toString();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return "0";

	}
	
	public static String sha1Convertion() {
		try {
			MessageDigest md = MessageDigest.getInstance("SHA1");

			FileInputStream fis = new FileInputStream(
					"/home/wojtyla/workspaceEclipse/MalwareDB/from/README.md");

			byte[] dataBytes = new byte[9999];

			int read = 0;

			while ((read = fis.read(dataBytes)) != -1) {
				md.update(dataBytes, 0, read);
			}
			;

			byte[] mdbytes = md.digest();

			StringBuffer hexString = new StringBuffer();
			for (int i = 0; i < mdbytes.length; i++) {
				String hex = Integer.toHexString(0xff & mdbytes[i]);
				if (hex.length() == 1)
					hexString.append('0');
				hexString.append(hex);
			}

			fis.close();
			return hexString.toString();

		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return "0";

	}

}
